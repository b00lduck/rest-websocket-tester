// Code generated by MockGen. DO NOT EDIT.
// Source: interfaces.go

// Package mock_json is a generated GoMock package.
package mock_json

import (
	gomock "github.com/golang/mock/gomock"
	io "io"
	reflect "reflect"
)

// MockTemplateI is a mock of TemplateI interface
type MockTemplateI struct {
	ctrl     *gomock.Controller
	recorder *MockTemplateIMockRecorder
}

// MockTemplateIMockRecorder is the mock recorder for MockTemplateI
type MockTemplateIMockRecorder struct {
	mock *MockTemplateI
}

// NewMockTemplateI creates a new mock instance
func NewMockTemplateI(ctrl *gomock.Controller) *MockTemplateI {
	mock := &MockTemplateI{ctrl: ctrl}
	mock.recorder = &MockTemplateIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockTemplateI) EXPECT() *MockTemplateIMockRecorder {
	return m.recorder
}

// Execute mocks base method
func (m *MockTemplateI) Execute(arg0 io.Writer, arg1 interface{}) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Execute", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Execute indicates an expected call of Execute
func (mr *MockTemplateIMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockTemplateI)(nil).Execute), arg0, arg1)
}
